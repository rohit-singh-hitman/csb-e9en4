{"version":3,"sources":["Currency.js","App.js","index.js"],"names":["Currency","props","currencyOptions","amount","selectCurrency","changeCurrency","type","value","onChange","map","option","BASE_URL","App","toamount","fromAmount","useState","setCurrencyOptions","fromCurrency","setFromCurrency","toCurrency","setTOCurrency","setAmount","amountFromIncurrency","setAmountFromIncurrency","exchangeRates","setexchangeRates","useEffect","fetch","then","res","json","data","firstCurrency","Object","keys","rates","base","className","style","display","justifyContent","alignItems","boxShadow","width","height","backgroundColor","onChangeAmount","e","target","rootElement","document","getElementById","ReactDOM","render"],"mappings":"mLAiBeA,EAfE,SAACC,GAAW,IACnBC,EAA4DD,EAA5DC,gBAAiBC,EAA2CF,EAA3CE,OAAQC,EAAmCH,EAAnCG,eAAgBC,EAAmBJ,EAAnBI,eACjD,OACE,qCACE,uBAAOC,KAAK,SAASC,MAAOJ,IAD9B,KAEE,wBAAQI,MAAOH,EAAgBI,SAAUH,EAAzC,SACGH,EAAgBO,KAAI,SAACC,GAAD,OACnB,wBAAqBH,MAAOG,EAA5B,SACGA,GADUA,YCNjBC,EAAW,yCACF,SAASC,IAAO,IAQzBC,EAAUC,EARc,EACkBC,mBAAS,IAD3B,mBACrBb,EADqB,KACJc,EADI,OAEYD,qBAFZ,mBAErBE,EAFqB,KAEPC,EAFO,OAGQH,qBAHR,mBAGrBI,EAHqB,KAGTC,EAHS,OAIAL,mBAAS,GAJT,mBAIrBZ,EAJqB,KAIbkB,EAJa,OAK4BN,oBAAS,GALrC,mBAKrBO,EALqB,KAKCC,EALD,OAMcR,qBANd,mBAMrBS,EANqB,KAMNC,EANM,KASxBH,GACFR,EAAaX,EACbU,EAAWV,EAASqB,IAEpBX,EAAWV,EACXW,EAAaX,EAASqB,GAExBE,qBAAU,WACRC,MAAMhB,GACHiB,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACL,IAAMC,EAAgBC,OAAOC,KAAKH,EAAKI,OAAO,GAC9CnB,EAAmB,CAACe,EAAKK,MAAP,mBAAgBH,OAAOC,KAAKH,EAAKI,UACnDjB,EAAgBa,EAAKK,MACrBhB,EAAcY,GACdP,EAAiBM,EAAKI,MAAMH,SAE/B,IAiBH,OAPAN,qBAAU,WACY,MAAhBT,GAAsC,MAAdE,GAC1BQ,MAAM,GAAD,OAAIhB,EAAJ,iBAAqBM,EAArB,mBAA4CE,IAC9CS,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OAAUN,EAAiBM,EAAKI,MAAMhB,SAE/C,CAACF,EAAcE,IAEhB,qBACEkB,UAAU,MACVC,MAAO,CACLC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,UAAW,wBANf,SASE,sBAAKJ,MAAO,CAAEK,MAAO,QAASC,OAAQ,QAASC,gBAAiB,QAAhE,UACE,qDACA,cAAC,EAAD,CACE3C,gBAAiBA,EACjBE,eAAgBa,EAChBd,OAAQW,EACRgC,eA/BuB,SAACC,GAC9B1B,EAAU0B,EAAEC,OAAOzC,OACnBgB,GAAwB,IA8BlBlB,eAAgB,SAAC0C,GAAD,OAAO7B,EAAgB6B,EAAEC,OAAOzC,UAElD,oCACA,cAAC,EAAD,CACEL,gBAAiBA,EACjBE,eAAgBe,EAChBhB,OAAQU,EACRiC,eAnCqB,SAACC,GAC5B1B,EAAU0B,EAAEC,OAAOzC,OACnBgB,GAAwB,IAkClBlB,eAAgB,SAAC0C,GAAD,OAAO3B,EAAc2B,EAAEC,OAAOzC,eCnExD,IAAM0C,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAACzC,EAAD,MAEFqC,K","file":"static/js/main.a3d24769.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nconst Currency = (props) => {\r\n  const { currencyOptions, amount, selectCurrency, changeCurrency } = props;\r\n  return (\r\n    <>\r\n      <input type=\"number\" value={amount} />\\\r\n      <select value={selectCurrency} onChange={changeCurrency}>\r\n        {currencyOptions.map((option) => (\r\n          <option key={option} value={option}>\r\n            {option}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    </>\r\n  );\r\n};\r\nexport default Currency;\r\n","import \"./styles.css\";\nimport Currency from \"./Currency\";\nimport React, { useEffect, useState } from \"react\";\nconst BASE_URL = \"https://api.exchangeratesapi.io/latest\";\nexport default function App() {\n  const [currencyOptions, setCurrencyOptions] = useState([]);\n  const [fromCurrency, setFromCurrency] = useState();\n  const [toCurrency, setTOCurrency] = useState();\n  const [amount, setAmount] = useState(1);\n  const [amountFromIncurrency, setAmountFromIncurrency] = useState(true);\n  const [exchangeRates, setexchangeRates] = useState();\n\n  let toamount, fromAmount;\n  if (amountFromIncurrency) {\n    fromAmount = amount;\n    toamount = amount * exchangeRates;\n  } else {\n    toamount = amount;\n    fromAmount = amount / exchangeRates;\n  }\n  useEffect(() => {\n    fetch(BASE_URL)\n      .then((res) => res.json())\n      .then((data) => {\n        const firstCurrency = Object.keys(data.rates)[0];\n        setCurrencyOptions([data.base, ...Object.keys(data.rates)]);\n        setFromCurrency(data.base);\n        setTOCurrency(firstCurrency);\n        setexchangeRates(data.rates[firstCurrency]);\n      });\n  }, []);\n\n  const handleFromAmountChange = (e) => {\n    setAmount(e.target.value);\n    setAmountFromIncurrency(true);\n  };\n  const handleToAmountChange = (e) => {\n    setAmount(e.target.value);\n    setAmountFromIncurrency(false);\n  };\n  useEffect(() => {\n    if (fromCurrency != null && toCurrency != null) {\n      fetch(`${BASE_URL}?base=${fromCurrency}&symbol=${toCurrency}`)\n        .then((res) => res.json())\n        .then((data) => setexchangeRates(data.rates[toCurrency]));\n    }\n  }, [fromCurrency, toCurrency]);\n  return (\n    <div\n      className=\"App\"\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        boxShadow: \"5px 10px  10px black\"\n      }}\n    >\n      <div style={{ width: \"400px\", height: \"300px\", backgroundColor: \"grey\" }}>\n        <h1>currency converter </h1>\n        <Currency\n          currencyOptions={currencyOptions}\n          selectCurrency={fromCurrency}\n          amount={fromAmount}\n          onChangeAmount={handleFromAmountChange}\n          changeCurrency={(e) => setFromCurrency(e.target.value)}\n        />\n        <div>=</div>\n        <Currency\n          currencyOptions={currencyOptions}\n          selectCurrency={toCurrency}\n          amount={toamount}\n          onChangeAmount={handleToAmountChange}\n          changeCurrency={(e) => setTOCurrency(e.target.value)}\n        />\n      </div>\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}